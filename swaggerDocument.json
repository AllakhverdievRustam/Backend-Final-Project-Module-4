{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Hospital",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "receptions"
    },
    {
      "name": "users"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/getAllUser": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/registrationUser": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/usersReg"
            }
          }
        ],
        "responses": {
          "421": {
            "description": "This user already exists!"
          },
          "422": {
            "description": "Invalid data entered!",
            "schema": {
              "$ref": "#/definitions/usersReg"
            }
          }
        }
      }
    },
    "/authorizationUser": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/usersAuth"
            }
          }
        ],
        "responses": {
          "420": {
            "description": "Such user does not exist!"
          },
          "421": {
            "description": "Wrong password!"
          },
          "422": {
            "description": "Invalid data entered!",
            "schema": {
              "$ref": "#/definitions/usersAuth"
            }
          }
        }
      }
    },
    "/deleteUser": {
      "delete": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "421": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Invalid data entered!"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/changeUser": {
      "patch": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "img",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "421": {
            "schema": {
              "type": "object",
              "properties": {
                "img": {
                  "type": "string",
                  "example": ""
                },
                "authorization": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Invalid data entered!"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/getAllReceptions": {
      "post": {
        "tags": [
          "receptions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/paramsGetAllReceptions"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid data entered!",
            "schema": {
              "$ref": "#/definitions/paramsGetAllReceptions"
            }
          }
        }
      }
    },
    "/createNewReception": {
      "post": {
        "tags": [
          "receptions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/paramsCreateNewReceptions"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid data entered!",
            "schema": {
              "$ref": "#/definitions/paramsCreateNewReceptions"
            }
          }
        }
      }
    },
    "/editReception": {
      "patch": {
        "tags": [
          "receptions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/paramsEditReceptions"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid data entered!",
            "schema": {
              "$ref": "#/definitions/paramsEditReceptions"
            }
          }
        }
      }
    },
    "/deleteReception": {
      "delete": {
        "tags": [
          "receptions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string",
            "value": "5"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "string",
            "value": "0"
          },
          {
            "name": "sortLable",
            "in": "query",
            "required": true,
            "type": "string",
            "value": "nameDoctor"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": true,
            "type": "string",
            "value": "asc/desc"
          },
          {
            "name": "firstDate",
            "in": "query",
            "required": true,
            "type": "string",
            "value": "2021-08-01"
          },
          {
            "name": "lastDate",
            "in": "query",
            "required": true,
            "type": "string",
            "value": "2021-08-31"
          },
          {
            "name": "_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid data entered!"
          }
        }
      }
    }
  },
  "definitions": {
    "usersReg": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        },
        "passwordReveat": {
          "type": "string",
          "example": ""
        }
      }
    },
    "usersAuth": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        }
      }
    },
    "paramsGetAllReceptions": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "example": "5"
        },
        "offset": {
          "type": "string",
          "example": "0"
        },
        "sortLable": {
          "type": "string",
          "example": "nameDoctor"
        },
        "sortDirection": {
          "type": "string",
          "example": "asc/desc"
        },
        "firstDate": {
          "type": "string",
          "example": "2021-08-01"
        },
        "lastDate": {
          "type": "string",
          "example": "2021-08-31"
        }
      }
    },
    "paramsCreateNewReceptions": {
      "type": "object",
      "properties": {
        "nameUser": {
          "type": "string",
          "example": "Rustam"
        },
        "nameDoctor": {
          "type": "string",
          "example": "Doctor 1"
        },
        "date": {
          "type": "string",
          "example": "08/10/2021"
        },
        "complaint": {
          "type": "string",
          "example": "что то"
        },
        "limit": {
          "type": "string",
          "example": "5"
        },
        "offset": {
          "type": "string",
          "example": "0"
        },
        "sortLable": {
          "type": "string",
          "example": "nameDoctor"
        },
        "sortDirection": {
          "type": "string",
          "example": "asc/desc"
        },
        "firstDate": {
          "type": "string",
          "example": "2021-08-01"
        },
        "lastDate": {
          "type": "string",
          "example": "2021-08-31"
        }
      }
    },
    "paramsEditReceptions": {
      "type": "object",
      "properties": {
        "nameUser": {
          "type": "string",
          "example": "Rustam"
        },
        "nameDoctor": {
          "type": "string",
          "example": "Doctor 1"
        },
        "date": {
          "type": "string",
          "example": "08/10/2021"
        },
        "complaint": {
          "type": "string",
          "example": "что то"
        },
        "limit": {
          "type": "string",
          "example": "5"
        },
        "offset": {
          "type": "string",
          "example": "0"
        },
        "sortLable": {
          "type": "string",
          "example": "nameDoctor"
        },
        "sortDirection": {
          "type": "string",
          "example": "asc/desc"
        },
        "firstDate": {
          "type": "string",
          "example": "2021-08-01"
        },
        "lastDate": {
          "type": "string",
          "example": "2021-08-31"
        },
        "_id": {
          "type": "string",
          "example": ""
        }
      }
    }
  }
}